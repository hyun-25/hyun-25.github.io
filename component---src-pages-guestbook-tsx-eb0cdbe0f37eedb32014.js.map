{"version":3,"file":"component---src-pages-guestbook-tsx-eb0cdbe0f37eedb32014.js","mappings":"qLAEO,MAAMA,GAAOC,E,QAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,kB,aC8CpB,MAnC8CC,IAAqB,IAApB,KAAEC,EAAI,KAAEC,GAAMF,EAC3D,MAAMG,GAAUC,EAAAA,EAAAA,aACVC,GAAqBC,EAAAA,EAAAA,SAAO,GAC5BC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GA6BzB,OA3BAC,EAAAA,EAAAA,YAAU,KACR,IAAKP,EAAQQ,QAAS,OAEtB,MAAMC,EAAaC,SAASC,cAAc,UACpCC,EAA+C,CACnDC,IAlBM,gCAmBNf,OACAgB,OAnBS,OAoBT,MAASV,EAAMW,OAAS,cAAgB,eACxC,MAAS,UACT,OAAS,EACT,aAAc,WACd,YAAe,aAGjBC,OAAOC,KAAKL,GAAkBM,SAASC,IACrCV,EAAWW,aAAaD,EAAWP,EAAiBO,GAAqB,IAE3EnB,EAAQQ,QAAQa,YAAYZ,GAExBP,EAAmBM,QACrBR,EAAQQ,QAAQc,aAAab,EAAYT,EAAQQ,QAAQe,YAEzDrB,EAAmBM,SAAU,CAC/B,GACC,CAACR,EAASD,EAAMK,EAAMW,UAElBS,EAAAA,EAAAA,KAACC,EAAS,CAACC,UAAU,aAAaC,IAAK3B,GAAW,C,4FCzCpD,MAAMR,GAAOC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,mMAaTmC,EAAAA,GAAkB,8F,aCH7B,MAVkCC,KAE9BL,EAAAA,EAAAA,KAACC,EAAS,MACRD,EAAAA,EAAAA,KAAA,WAAK,WACLA,EAAAA,EAAAA,KAAA,WAAK,UACLA,EAAAA,EAAAA,KAAA,WAAK,wB,8BCmBX,MAZ4C3B,IAAwB,IAAvB,SAAEiC,EAAQ,KAAEC,GAAMlC,EAC7D,MAAMmC,EAAiBD,EAAKE,KAAKC,aAAaC,SAAS1B,WAAWX,KAElE,OACE0B,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACN,SAAUA,IAChBN,EAAAA,EAAAA,KAACa,EAAAA,EAAG,CAACC,MAAM,wBACXd,EAAAA,EAAAA,KAACK,EAAe,OAChBL,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACzC,KAAMkC,EAAgBjC,KAAK,cAChC,C","sources":["webpack://danmin-gatsby-blog/./src/components/Utterances/styled.ts","webpack://danmin-gatsby-blog/./src/components/Utterances/index.tsx","webpack://danmin-gatsby-blog/./src/components/GuestbookBanner/styled.ts","webpack://danmin-gatsby-blog/./src/components/GuestbookBanner/index.tsx","webpack://danmin-gatsby-blog/./src/pages/guestbook.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  margin: 30px 0;\n`;\n","import { ThemeManagerContext } from 'gatsby-emotion-dark-mode';\nimport React, { createRef, useContext, useEffect, useRef } from 'react';\n\nimport * as S from './styled';\n\nconst src = 'https://utteranc.es/client.js';\nconst branch = 'main';\n\ntype UtterancesProps = {\n  repo: string;\n  path: string;\n};\n\nconst Utterances: React.FC<UtterancesProps> = ({ repo, path }) => {\n  const rootElm = createRef<HTMLDivElement>();\n  const isUtterancesLoaded = useRef(false);\n  const theme = useContext(ThemeManagerContext);\n\n  useEffect(() => {\n    if (!rootElm.current) return;\n\n    const utterances = document.createElement('script');\n    const utterancesConfig: { [key: string]: unknown } = {\n      src,\n      repo,\n      branch,\n      'theme': theme.isDark ? 'photon-dark' : 'github-light',\n      'label': 'comment',\n      'async': true,\n      'issue-term': 'pathname',\n      'crossorigin': 'anonymous',\n    };\n\n    Object.keys(utterancesConfig).forEach((configKey) => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey] as string);\n    });\n    rootElm.current.appendChild(utterances);\n\n    if (isUtterancesLoaded.current) {\n      rootElm.current.replaceChild(utterances, rootElm.current.firstChild as Node);\n    } else {\n      isUtterancesLoaded.current = true;\n    }\n  }, [rootElm, path, theme.isDark]);\n\n  return <S.Wrapper className='utterances' ref={rootElm} />;\n};\n\nexport default Utterances;\n","import styled from '@emotion/styled';\n\nimport { MOBILE_MEDIA_QUERY } from '@/src/styles/const';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding-top: 70px;\n  padding-bottom: 30px;\n  font-size: 18px;\n  gap: 10px;\n  & > div:first-of-type {\n    font-size: 30px;\n  }\n  @media ${MOBILE_MEDIA_QUERY} {\n    padding-top: 50px;\n    padding-bottom: 20px;\n    font-size: 15px;\n    & > div:first-of-type {\n      font-size: 27px;\n    }\n  }\n`;\n","import React from 'react';\n\nimport * as S from './styled';\n\nconst GuestbookBanner: React.FC = () => {\n  return (\n    <S.Wrapper>\n      <div>üëãüëãüëã</div>\n      <div>Î∞òÍ∞ÄÏõåÏöî!</div>\n      <div>ÏûêÏú†Î°≠Í≤å Î∞©Î™ÖÎ°ùÏùÑ ÏûëÏÑ±Ìï¥Ï£ºÏÑ∏Ïöî :)</div>\n    </S.Wrapper>\n  );\n};\n\nexport default GuestbookBanner;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport GuestbookBanner from '../components/GuestbookBanner';\nimport Seo from '../components/Seo';\nimport Utterances from '../components/Utterances';\nimport Layout from '../layout';\nimport { SiteMetadata } from '../type';\n\ntype GuestbookProps = {\n  data: {\n    site: { siteMetadata: SiteMetadata };\n  };\n  location: Location;\n};\n\nconst Guestbook: React.FC<GuestbookProps> = ({ location, data }) => {\n  const utterancesRepo = data.site.siteMetadata.comments.utterances.repo;\n\n  return (\n    <Layout location={location}>\n      <Seo title='Í∞úÎ∞úÏûê Îã®ÎØº | Guestbook' />\n      <GuestbookBanner />\n      <Utterances repo={utterancesRepo} path='guestbook' />\n    </Layout>\n  );\n};\n\nexport default Guestbook;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        comments {\n          utterances {\n            repo\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Wrapper","_styled","target","name","styles","_ref","repo","path","rootElm","createRef","isUtterancesLoaded","useRef","theme","useContext","ThemeManagerContext","useEffect","current","utterances","document","createElement","utterancesConfig","src","branch","isDark","Object","keys","forEach","configKey","setAttribute","appendChild","replaceChild","firstChild","___EmotionJSX","S","className","ref","MOBILE_MEDIA_QUERY","GuestbookBanner","location","data","utterancesRepo","site","siteMetadata","comments","Layout","Seo","title","Utterances"],"sourceRoot":""}